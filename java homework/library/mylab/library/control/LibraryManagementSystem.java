package mylab.library.control;

import java.util.List;

import mylab.library.entity.Book;
import mylab.library.entity.Library;

public class LibraryManagementSystem {

	public static void main(String[] args) {
		Library library = new Library("중앙 도서관");
		
		addSampleBooks(library);
		System.out.println("===== " + library.getName() + " =====");
		System.out.println("전체 도서 수: " + library.getTotalBooks());
		System.out.println("대출 가능한 도서 수: " + library.getAvailableBooksCount());
		System.out.println("대출 중인 도서 수: " + library.getBorrowedBooksCount());
		System.out.println("");
        testFindBook(library);
        testCheckOut(library);
        System.out.println("도서관 현재 상태:");
		System.out.println("전체 도서 수: " + library.getTotalBooks());
		System.out.println("대출 가능한 도서 수: " + library.getAvailableBooksCount());
		System.out.println("대출 중인 도서 수: " + library.getBorrowedBooksCount());
		System.out.println("");
        testReturn(library);
        System.out.println("도서관 현재 상태:");
		System.out.println("전체 도서 수: " + library.getTotalBooks());
		System.out.println("대출 가능한 도서 수: " + library.getAvailableBooksCount());
		System.out.println("대출 중인 도서 수: " + library.getBorrowedBooksCount());
		System.out.println("");
        displayAvailableBooks(library);
	}
	
	// 샘플 도서 추가 
	public static void addSampleBooks(Library library) {
		library.addBook(new Book("자바 프로그래밍", "김자바", "978-89-01-12345-6", 2022, true));
        library.addBook(new Book("객체지향의 사실과 오해", "조영호", "978-89-01-67890-1", 2015, true));
        library.addBook(new Book("Clean Code", "Robert C. Martin", "978-0-13-235088-4", 2008, true));
        library.addBook(new Book("Effective Java", "Joshua Bloch", "978-0-13-468599-1", 2018, true));
        library.addBook(new Book("Head First Java", "Kathy Sierra", "978-0-596-00920-5", 2005, true));
        library.addBook(new Book("자바의 정석", "남궁성", "978-89-01-14077-4", 2019, true));
        
        System.out.println("도서가 추가되었습니다: 자바 프로그래밍");
        System.out.println("도서가 추가되었습니다: 객체지향의 사실과 오해");
        System.out.println("도서가 추가되었습니다: Clean Code");
        System.out.println("도서가 추가되었습니다: Effective Java");
        System.out.println("도서가 추가되었습니다: Head First Java");
        System.out.println("도서가 추가되었습니다: 자바의 정석");
	}

    // 도서 검색 테스트
    public static void testFindBook(Library library) {
        System.out.println("===== 도서 검색 테스트 =====");

        System.out.println("제목으로 검색 결과:");
        Book foundByTitle = library.findBookByTitle("자바의 정석");
        if (foundByTitle != null) {
        	String okBorrow = foundByTitle.isAvailable() == true ? "가능" : "불가능";
        	System.out.printf("책 제목: %s	저자: %s	ISBN: %s	출판년도: %d	대출 가능 여부: %s",
        			foundByTitle.getTitle(), foundByTitle.getAuthor(), foundByTitle.getIsbn(), foundByTitle.getPublishYear(), okBorrow);
        }
        System.out.println();
        System.out.println("\n저자로 검색 결과:");
        List<Book> foundByAuthor = library.findBooksByAuthor("Robert C. Martin");
        for (Book book : foundByAuthor) {
        	String okBorrow = book.isAvailable() == true ? "가능" : "불가능";
        	System.out.printf("책 제목: %s	저자: %s	ISBN: %s	출판년도: %d	대출 가능 여부: %s",
        			book.getTitle(), book.getAuthor(), book.getIsbn(), book.getPublishYear(), okBorrow);
        }
        System.out.println();
    }

    // 도서 대출 테스트
    public static void testCheckOut(Library library) {
        System.out.println("\n===== 도서 대출 테스트 =====");
        boolean checkedOut = library.checkOutBook("978-89-01-14077-4");
        if (checkedOut) {
            System.out.println("도서 대출 성공!");
            Book borrowedBook = library.findBookByISBN("978-89-01-14077-4");
            System.out.println("대출된 도서 정보:");
            String okBorrow = borrowedBook.isAvailable() == true ? "가능" : "불가능";
        	System.out.printf("책 제목: %s	저자: %s	ISBN: %s	출판년도: %d	대출 가능 여부: %s\n",
        			borrowedBook.getTitle(), borrowedBook.getAuthor(), borrowedBook.getIsbn(), borrowedBook.getPublishYear(), okBorrow);
        }
        System.out.println();
    }

    // 도서 반납 테스트
    public static void testReturn(Library library) {
        System.out.println("===== 도서 반납 테스트 =====");
        boolean returned = library.returnBook("978-89-01-14077-4");
        if (returned) {
            System.out.println("도서 반납 성공!");
            Book returnedBook = library.findBookByISBN("978-89-01-14077-4");
            System.out.println("반납된 도서 정보:");
            String okBorrow = returnedBook.isAvailable() == true ? "가능" : "불가능";
        	System.out.printf("책 제목: %s	저자: %s	ISBN: %s	출판년도: %d	대출 가능 여부: %s",
        			returnedBook.getTitle(), returnedBook.getAuthor(), returnedBook.getIsbn(), returnedBook.getPublishYear(), okBorrow);
        }
        System.out.println("\n");
    }

    // 대출 가능한 도서 목록 출력
    public static void displayAvailableBooks(Library library) {
        System.out.println("===== 대출 가능한 도서 목록 =====");
        List<Book> availableBooks = library.getAvailableBooks();
        for (Book book : availableBooks) {
        	String okBorrow = book.isAvailable() == true ? "가능" : "불가능";
        	System.out.printf("책 제목: %s	저자: %s	ISBN: %s	출판년도: %d	대출 가능 여부: %s\n",
        			book.getTitle(), book.getAuthor(), book.getIsbn(), book.getPublishYear(), okBorrow);
            System.out.println("------------------------");
        }
    }
}